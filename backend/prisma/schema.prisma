generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @map("_id") @default(auto()) @db.ObjectId
  name     String
  email    String  @unique
  password String
  image    String?
  forms    Form[]  @relation("UserForms")
}

model Form {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  headerImage String?
  questions   Question[]
  responses   FormResponse[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  userId      String         @db.ObjectId
  user        User           @relation("UserForms", fields: [userId], references: [id])
}

model Question {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  form        Form          @relation(fields: [formId], references: [id])
  formId      String        @db.ObjectId
  type        QuestionType
  title       String?
  description String?
  imageUrl    String?
  payload     Json
  required    Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model FormResponse {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  form        Form      @relation(fields: [formId], references: [id])
  formId      String    @db.ObjectId
  answers     Answer[]
  submittedAt DateTime  @default(now())
  meta        Json?
}

model Answer {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  response   FormResponse  @relation(fields: [responseId], references: [id])
  responseId String        @db.ObjectId
  questionId String        @db.ObjectId
  value      Json?
}

enum QuestionType {
  categorize
  cloze
  comprehension
}
